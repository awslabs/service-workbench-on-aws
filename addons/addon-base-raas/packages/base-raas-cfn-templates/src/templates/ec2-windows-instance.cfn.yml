AWSTemplateFormatVersion: 2010-09-09

Description: Service-Workbench-on-AWS EC2-Windows

Parameters:
  Namespace:
    Type: String
    Description: An environment name that will be prefixed to resource names
  AmiId:
    Type: String
    Description: Amazon Machine Image for the EC2 instance
  InstanceType:
    Type: String
    Description: EC2 instance type to launch
    Default: t3.xlarge
  KeyName:
    Type: String
    Description: Keypair name for admin password encryption/decryption
  AccessFromCIDRBlock:
    Type: String
    Description: The CIDR used to access the ec2 instances.
  VPC:
    Description: The VPC in which the EC2 instance will reside
    Type: AWS::EC2::VPC::Id
  Subnet:
    Description: The VPC subnet in which the EC2 instance will reside
    Type: AWS::EC2::Subnet::Id
  EncryptionKeyArn:
    Type: String
    Description: The ARN of the KMS encryption Key used to encrypt data in the instance

Resources:
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Join ['-', [Ref: Namespace, 'ec2-role']]
      Path: '/'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Join ['-', [Ref: Namespace, 's3-policy']]
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:*'
                Resource:
                  - '*'

  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: !Join ['-', [Ref: Namespace, 'ec2-profile']]
      Path: '/'
      Roles:
        - Ref: IAMRole

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: EC2 workspace security group
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: !Ref AccessFromCIDRBlock
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref AccessFromCIDRBlock
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref AccessFromCIDRBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref AccessFromCIDRBlock
      Tags:
        - Key: Name
          Value: !Join ['-', [Ref: Namespace, 'ec2-sg']]
        - Key: Description
          Value: EC2 workspace security group
      VpcId: !Ref VPC

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    CreationPolicy:
      ResourceSignal:
        Timeout: 'PT20M'
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
            Encrypted: true
            KmsKeyId: !Ref EncryptionKeyArn
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref SecurityGroup
          SubnetId: !Ref Subnet
      Tags:
        - Key: Name
          Value: !Join ['-', [Ref: Namespace, 'ec2-windows']]
        - Key: Description
          Value: EC2 workspace instance
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          cmd /c "exit 0" # Automatically return success; remove this line if actual bootstrapping logic is added
          cfn-signal.exe -e $lastexitcode --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          </powershell>

Outputs:
  Ec2WorkspaceDnsName:
    Description: Public DNS name of the EC2 workspace instance
    Value: !GetAtt [EC2Instance, PublicDnsName]

  Ec2WorkspacePublicIp:
    Description: Public IP address of the EC2 workspace instance
    Value: !GetAtt [EC2Instance, PublicIp]

  Ec2WorkspaceInstanceId:
    Description: Instance Id for the EC2 workspace instance
    Value: !Ref EC2Instance

  WorkspaceInstanceRoleArn:
    Description: IAM role assumed by the EC2 workspace instance
    Value: !GetAtt IAMRole.Arn
