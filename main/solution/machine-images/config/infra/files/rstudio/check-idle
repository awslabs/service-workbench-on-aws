#!/usr/bin/env python

import os
import datetime as dt
import dateutil.parser as parser


LAST_ACTIVE_TIME_FILENAME = '/tmp/last-active-rsession-time'
ACCESS_LOG_FILENAME = '/var/log/nginx/access.log'

# To disable auto-stop for RStudio, enter 0 as the value below for MAX_IDLE_MINUTES
MAX_IDLE_MINUTES = 60

if MAX_IDLE_MINUTES == 0:
    print('Auto-stop disabled. Exiting..')
    exit(0)


def get_uptime_seconds():
    return round(float(open('/proc/uptime').read().split()[0]))


def get_activity_count():
    non_ping_count = 0
    with open(ACCESS_LOG_FILENAME) as access_log:
        for line in access_log:
            # nginx sometimes pings the RStudio instance
            # which does not indicate user activity
            if "POST /events/get_events" not in line:
                non_ping_count += 1
    return (non_ping_count)


current_time = dt.datetime.now()
latest_activity_count = get_activity_count()
system_uptime = get_uptime_seconds()/60

if not os.path.exists(LAST_ACTIVE_TIME_FILENAME):
    open(LAST_ACTIVE_TIME_FILENAME, 'w').write(
        str(latest_activity_count) + '\n' + str(current_time))

# These will be overwritten by the stored file values
last_activity_count = 0
last_active_time = dt.datetime.now()

with open(LAST_ACTIVE_TIME_FILENAME) as fh:
    last_activity_count = int(fh.readline())
    for line in fh:
        pass
    last_active_time = parser.parse(line)

# Compare with old_activity_count
# If higher than old count, update file with time and count
if latest_activity_count > last_activity_count:
    open(LAST_ACTIVE_TIME_FILENAME, 'w').write(
        str(latest_activity_count) + '\n' + str(current_time))
else:
    # If time difference between file time and now exceeds MAX_IDLE_MINUTES, shutdown
    idle_minutes = (current_time - last_active_time).total_seconds()/60
    if idle_minutes >= MAX_IDLE_MINUTES and system_uptime >= MAX_IDLE_MINUTES:
        print('Shutting down due to max idle')
        os.system('sudo /usr/sbin/shutdown now')
