postDeployment:
  handler: src/lambdas/post-deployment/handler.handler
  role: RolePostDeploymentLambda
  tags: ${self:custom.tags}
  description: The Post Deployment handler that executes post deployment tasks
  timeout: 900 # 15 min timeout
  environment:
    APP_DB_DEPLOYMENT_STORE: ${self:custom.settings.dbDeploymentStore}
    APP_ROOT_USER_NAME: ${self:custom.settings.rootUserName}
    APP_ROOT_USER_FIRST_NAME: ${self:custom.settings.rootUserFirstName}
    APP_ROOT_USER_LAST_NAME: ${self:custom.settings.rootUserLastName}
    APP_ROOT_USER_EMAIL: ${self:custom.settings.rootUserEmail}
    APP_ROOT_USER_PASSWORD_PARAM_NAME: ${self:custom.settings.rootUserPasswordParamName}
    APP_PARAM_STORE_JWT_SECRET: ${self:custom.settings.paramStoreJwtSecret}
    APP_JWT_OPTIONS: ${self:custom.settings.jwtOptions}
    APP_ENABLE_USER_SIGN_UPS: ${self:custom.settings.enableUserSignUps}
    APP_COGNITO_USER_POOL_DOMAIN_PREFIX: ${self:custom.settings.cognitoUserPoolDomainPrefix}
    APP_FED_IDP_IDS: ${self:custom.settings.fedIdpIds}
    APP_FED_IDP_NAMES: ${self:custom.settings.fedIdpNames}
    APP_FED_IDP_DISPLAY_NAMES: ${self:custom.settings.fedIdpDisplayNames}
    APP_FED_IDP_METADATAS: ${self:custom.settings.fedIdpMetadatas}
    APP_WEBSITE_URL: ${self:custom.settings.websiteUrl}
    APP_DEFAULT_AUTH_N_PROVIDER_TITLE: ${self:custom.settings.defaultAuthNProviderTitle}
    APP_COGNITO_AUTH_N_PROVIDER_TITLE: ${self:custom.settings.cognitoAuthNProviderTitle}
    APP_BACKEND_STACK_NAME: ${self:custom.settings.backendStackName}
    APP_WORKFLOW_LAMBDA_NAME: ${self:custom.settings.workflowLambdaName}
    APP_EDGE_LAMBDA_ARN: ${self:custom.settings.edgeLambdaArn}
    APP_CLOUD_FRONT_ID: ${self:custom.settings.cloudFrontId}
    APP_ENABLE_EXTERNAL_RESEARCHERS: ${self:custom.settings.enableExternalResearchers}
    APP_CREATE_SERVICE_CATALOG_PORTFOLIO: ${self:custom.settings.createServiceCatalogPortfolio}
    APP_NAMESPACE: ${self:custom.settings.namespace}
    APP_DEPLOYMENT_BUCKET_NAME: ${self:custom.settings.deploymentBucketName}
    APP_ENV_MGMT_ROLE_NAME: ${self:custom.settings.envMgmtRoleName}
    APP_LAUNCH_CONSTRAINT_ROLE_NAME: ${self:custom.settings.launchConstraintRoleName}
    APP_ENV_MGMT_ROLE_ARN: ${self:custom.settings.envMgmtRoleArn}
    APP_CUSTOM_USER_AGENT: ${self:custom.settings.customUserAgent}
    APP_ENABLE_EGRESS_STORE: ${self:custom.settings.enableEgressStore}
    APP_IS_APP_STREAM_ENABLED: ${self:custom.settings.isAppStreamEnabled}
    APP_ENABLE_FLOW_LOGS: ${self:custom.settings.enableFlowLogs}
    APP_ENVIRONMENTS_BOOTSTRAP_BUCKET_NAME: ${self:custom.settings.environmentsBootstrapBucketName}
    APP_STUDY_DATA_BUCKET_NAME: ${self:custom.settings.studyDataBucketName}
    APP_ENABLE_NATIVE_USER_POOL_USERS: ${self:custom.settings.enableNativeUserPoolUsers}
    APP_AUTO_CONFIRM_NATIVE_USERS: ${self:custom.settings.autoConfirmNativeUsers}
    APP_NATIVE_ADMIN_PASSWORD_PARAM_NAME: ${self:custom.settings.nativeAdminPasswordParamName}
    APP_ENV_NAME: ${self:custom.settings.envName}

egressStoreObjectsHandler:
  role: RoleEgressStoreObjectsHandler
  handler: src/lambdas/egress-store-object-handler/handler.handler
  description: Handles attaching tags to s3 object created in egress store bucket
  tags: ${self:custom.tags}
  events:
    - s3:
        bucket: ${self:custom.settings.egressStoreBucketName}
        event: s3:ObjectCreated:*
        existing: true
    - s3:
        bucket: ${self:custom.settings.egressStoreBucketName}
        event: s3:ObjectRemoved:*
        existing: true
  environment:
    APP_CUSTOM_USER_AGENT: ${self:custom.settings.customUserAgent}
    APP_ENABLE_EGRESS_STORE: ${self:custom.settings.enableEgressStore}
    APP_EGRESS_STORE_BUCKET_NAME: ${self:custom.settings.egressStoreBucketName}
    APP_EGRESS_NOTIFICATION_BUCKET_NAME: ${self:custom.settings.egressNotificationBucketName}
    APP_EGRESS_NOTIFICATION_SNS_TOPIC_ARN: ${self:custom.settings.egressNotificationSnsTopicArn}
